name: PR Checks

on: pull_request

jobs:
  build_and_upload:
    name: build_and_upload
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2

      - name: Setup Node.js 12.x
        uses: actions/setup-node@v2
        with:
          node-version: 12.x

      - name: Get yarn cache
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        name: Load Yarn cache
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn

      - name: restore lerna
        uses: actions/cache@v2
        with:
          path: |
            node_modules
            */*/node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}

      - name: Install Dependencies
        run: yarn install --frozen-lockfile && yarn bootstrap

      - name: Build packages
        run: yarn build

      - name: Archive build artifacts
        uses: actions/upload-artifact@v2
        with:
          name: packages-dist
          path: |
            packages/paste-core/**/dist
            !packages/paste-core/core-bundle
            packages/paste-libraries/**/dist
            packages/design-tokens/dist
            packages/paste-icons/cjs
            packages/paste-icons/esm
            packages/paste-style-props/dist
            packages/paste-theme/dist
            packages/paste-types/dist
            !packages/paste-codemods
            !packages/paste-cra-template
            !packages/paste-nextjs-template
            !packages/paste-theme-designer
            !packages/paste-website

      # - name: Run tests
      #   run: yarn test

  test:
    name: test
    needs: build_and_upload
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2

      - name: Setup Node.js 12.x
        uses: actions/setup-node@v2
        with:
          node-version: 12.x

      - name: Get yarn cache
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        name: Load Yarn cache
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn

      - name: restore lerna
        uses: actions/cache@v2
        with:
          path: |
            node_modules
            */*/node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}

      - name: Install Dependencies
        run: yarn install --frozen-lockfile && yarn bootstrap

      # - name: Build packages
      #   run: yarn build

      - name: Download and test build
        uses: actions/download-artifact@v2
        with:
          name: packages-dist

      - name: Run tests
        run: yarn test

  # build_and_types:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout Repo
  #       uses: actions/checkout@v2

  #     - name: Setup Node.js 12.x
  #       uses: actions/setup-node@v2
  #       with:
  #         node-version: 12.x

  #     - name: Get yarn cache
  #       id: yarn-cache
  #       run: echo "::set-output name=dir::$(yarn cache dir)"

  #     - uses: actions/cache@v2
  #       name: Load Yarn cache
  #       with:
  #         path: ${{ steps.yarn-cache.outputs.dir }}
  #         key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
  #         restore-keys: |
  #           ${{ runner.os }}-yarn

  #     - name: restore lerna
  #       uses: actions/cache@v2
  #       with:
  #         path: |
  #           node_modules
  #           */*/node_modules
  #         key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}

  #     - name: Install Dependencies
  #       run: yarn install --frozen-lockfile && yarn bootstrap

  #     - name: Build packages
  #       run: yarn build

  #     - name: Run type checker
  #       run: yarn type-check

  # build_and_eslint:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout Repo
  #       uses: actions/checkout@v2

  #     - name: Setup Node.js 12.x
  #       uses: actions/setup-node@v2
  #       with:
  #         node-version: 12.x

  #     - name: Get yarn cache
  #       id: yarn-cache
  #       run: echo "::set-output name=dir::$(yarn cache dir)"

  #     - uses: actions/cache@v2
  #       name: Load Yarn cache
  #       with:
  #         path: ${{ steps.yarn-cache.outputs.dir }}
  #         key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
  #         restore-keys: |
  #           ${{ runner.os }}-yarn

  #     - name: restore lerna
  #       uses: actions/cache@v2
  #       with:
  #         path: |
  #           node_modules
  #           */*/node_modules
  #         key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}

  #     - name: Install Dependencies
  #       run: yarn install --frozen-lockfile && yarn bootstrap

  #     - name: Build packages
  #       run: yarn build

  #     - name: Run eslint
  #       run: yarn lint

  # build_and_tests:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout Repo
  #       uses: actions/checkout@v2

  #     - name: Setup Node.js 12.x
  #       uses: actions/setup-node@v2
  #       with:
  #         node-version: 12.x

  #     - name: Get yarn cache
  #       id: yarn-cache
  #       run: echo "::set-output name=dir::$(yarn cache dir)"

  #     - uses: actions/cache@v2
  #       name: Load Yarn cache
  #       with:
  #         path: ${{ steps.yarn-cache.outputs.dir }}
  #         key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
  #         restore-keys: |
  #           ${{ runner.os }}-yarn

  #     - name: restore lerna
  #       uses: actions/cache@v2
  #       with:
  #         path: |
  #           node_modules
  #           */*/node_modules
  #         key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}

  #     - name: Install Dependencies
  #       run: yarn install --frozen-lockfile && yarn bootstrap

  #     - name: Build packages
  #       run: yarn build

  #     - name: Run tests
  #       run: yarn test

  # build_and_prettier:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout Repo
  #       uses: actions/checkout@v2

  #     - name: Setup Node.js 12.x
  #       uses: actions/setup-node@v2
  #       with:
  #         node-version: 12.x

  #     - name: Get yarn cache
  #       id: yarn-cache
  #       run: echo "::set-output name=dir::$(yarn cache dir)"

  #     - uses: actions/cache@v2
  #       name: Load Yarn cache
  #       with:
  #         path: ${{ steps.yarn-cache.outputs.dir }}
  #         key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
  #         restore-keys: |
  #           ${{ runner.os }}-yarn

  #     - name: restore lerna
  #       uses: actions/cache@v2
  #       with:
  #         path: |
  #           node_modules
  #           */*/node_modules
  #         key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}

  #     - name: Install Dependencies
  #       run: yarn install --frozen-lockfile && yarn bootstrap

  #     - name: Build packages
  #       run: yarn build

  #     - name: Run prettier
  #       run: yarn prettier
